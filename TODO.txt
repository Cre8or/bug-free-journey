TODO:

- Fix ui_update_weapons and ui_update_storage recreating child controls on slots that haven't changed!
- Fully implement dragging functionality so it actually works (actually moving things around in inventories)
	* Modify the player/object's container data
	* Modify the player/object's inventory
	* Detect discrepancies and synchronise the actual inventory with the UI?
- Add a global scale multiplier (macro) for slot pictures?
- Detect changes done to the actual inventory container (outside manipulation via e.g. scripting commands)
- Search for "TODO" and "DEBUG" comments and address them





DONE:	(top: most recent)
- Fix child controls not getting deleted when dragging a reserved slot item onto its own slot
- Fix incorrect slot colouring when calling ui_dragging_start after the mouse has moved outside of the dragged control
- Figure out why dragging items into their exact original slot causes them to become undraggable
- Improve the debug hint to make the data more readable
- Fix dragging items/containers from reserved slots into regular slots causing errors (in ui_dragging_stop)
- Redefine slotPos variable to always be an array of numbers (X, Y)
	* First entry (X) can be negative, to indicate that the item/container is in a reserved slot
	* In this case, the first entry must match the reserved slot via an enumerations list
	* Adapt all events and functions that use the slot position to accomodate for the enums
- Fix being unable to drag reserved items/weapons from containers into their slots (if they are empty)
- Find a way to represent the origin slots of an item as "free" when dragging, without breaking anything else
- Fix vests and uniforms getting picked up twice in genrateContainerData
- Find a way to identify whether an item can go in the assigned slots/weapon slots
- Make a function to detect whether an item can fit in a specific container slot
	* Have a fast mode for performance that just returns true or false
	* have a detailed mode that also returns the controls that are required/blocking the item
- Find a way to determine which control the mouse cursor is currently on
- NVGs/Binoculars should be counted as part of the item category
- Add child controls support for weapon attachments
- Optimise the functions that use namespaces by only checking for the namespace if the result wasn't found
- Make a generateWeaponAccData function to generate the item data for weapon accessories (and loaded magazines)
- Generate data on items in the weapons menu (assigned items, weapons, NVGs, binoculars, etc.)
- Unify namespace variable names using macros
- Write two new config functions to fetch a weapon's magazines array and a magazine's max ammo count
- Tweak the generateContainerData function to fill the item data with actual item info (magazine capacity, weapon attachments, etc.)
- Distinguish between more categories:
	* Unifoms
	* Vests
	* Backpacks
- Convert weapons menu to use generateChildControls
	* Remove built-in icon controls and associated macros
	* Modify weapons/medical menu events to hide the new child controls correctly
- Add a fillbar to magazine items if they have more than one bullet
- Rewrite the dragging code to accomodate for multiple child controls, irrespective of scale, offset and count
 	* Also consider a way of detecting the "main" icon control (1st item in array?)
	* Finally, decide on default icon paths for various inventory items (magazines, grenades, attachments, etc.)
- Remove dragging controls from inventory.hpp (and their corresponding macros)
- Automatically generate inventory data for unknown containers when opening the inventory screen
- Figure out the inventory data format
	* Generate UIDs for every item
	* Store a minimum of 3 entries in the item data:
		+ UID
		+ classname
		+ slot position
	* Generate inventory slots layout automatically (for not-yet-processed containers)
- Make use of getClassSlotSize in ui_dragging_init event to scale the controls accordingly when dragging
- Figure out why weapon controls can't be dragged further than the bottom of the inventoy screen (and get stuck)





FAILED:
- When dragging, dynamically set the focus on the control group that the mouse cursor is over (so that scrollbars work)
